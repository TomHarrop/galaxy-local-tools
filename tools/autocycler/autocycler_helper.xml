<tool id="autocycler_helper" name="AutoCycler Helper" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>Run Autocycler Helper with long reads</description>
    <macros>
          <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code">
	 <![CDATA[

	    #if $reads.is_of_type("fastq")
		  ln -s $reads '$(reads.element_identifier)' &&
	    #else
	          echo "${reads} is not a fastq file"
	    #end if


	    autocycler helper
	    #if $long_read_tool.assembler == "genome_size"
		--reads '$reads.element_identifier'
		genome_size > '$genome_size_stat' 2>&1
	    #else	    
	    	'$long_read_tool.assembler'
            	--reads '$reads.element_identifier'
            	--out_prefix '$reads.element_identifier'
           	 #if $genome_size:
                	--genome_size '$genome_size'
            	#end if
            	--threads \${GALAXY_SLOTS:-4}
            	--read_type '$read_type'
            	#if $min_depth_abs:
                	--min_depth_abs '$min_depth_abs'
            	#end if
            	#if $min_depth_rel:
               		--min_depth_rel '$min_depth_rel'
            	#end if
	    #end if
        ]]>
    </command>

    <inputs>
	<param name="reads" type="data" format="fastq" label="Input long reads (FASTQ format)" required="true"/>
	<conditional name="long_read_tool">
	        <param name="assembler" type="select" label="Task to perform" required="true">
	            <option value="genome_size">genome_size</option>
	            <option value="flye">flye</option>
	            <option value="miniasm">miniasm</option>
	            <option value="raven">raven</option>
	    	</param>
			<when value="genome_size">
			</when>
			<when value="flye">
			</when>
			<when value="miniasm">
			</when>
			<when value="raven">
			</when>
	</conditional>
        <param name="genome_size" type="text" label="Estimated genome size (e.g., 4.7m)" optional="true"/>
        <param name="read_type" type="select" label="Read type" value="ont_r10">
            <option value="ont_r9">ont_r9</option>
            <option value="ont_r10" selected="true">ont_r10</option>
            <option value="pacbio_clr">pacbio_clr</option>
            <option value="pacbio_hifi">pacbio_hifi</option>
        </param>
        <param name="min_depth_abs" type="integer" label="Minimum absolute depth (optional)" optional="true"/>
        <param name="min_depth_rel" type="float" label="Minimum relative depth (optional)" optional="true"/>
    </inputs>

    <outputs>
	<data name="output_fasta" format="fasta" from_work_dir="*.fasta" label="${tool.name} on ${on_string}: subsample fasta reads">
	     <filter>long_read_tool['assembler'] != 'genome_size'</filter>
       </data>
        <data name="output_gfa" format="gfa1" from_work_dir="*.gfa" label="${tool.name} on ${on_string}: subsample gfa reads">
             <filter>long_read_tool['assembler'] != 'genome_size'</filter>
       </data>
        <data name="genome_size_stat" format="txt" label="${tool.name} on ${on_string}: subsample genome size">
            <filter>long_read_tool['assembler'] == 'genome_size'</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="reads" value="sample_01.fastq"/>
	    <param name="assembler" value="genome_size"/>
	    <param name="read_type" value="ont_r10"/>
	    <conditional name="long_read_tool">
                <param name="assembler" value="genome_size"/>
            </conditional>
	    <output name="genome_size_stat" file="genome_size_stat.txt" ftype="txt" compare="diff" lines_diff="200"/>  
        </test>	    
        <test>
	    <param name="reads" value="sample_01.fastq"/>
	    <param name="read_type" value="ont_r10"/>
            <conditional name="long_read_tool">
                <param name="assembler" value="flye"/>
            </conditional>
	    <output name="output" file="flye_01.fasta" ftype="fasta" compare="diff" lines_diff="1000"/>
	    <output name="output" file="flye_01.gfa" ftype="gfa1" compare="diff" lines_diff="1000"/>
        </test>
    </tests>

    <help><![CDATA[
This tool wraps the `autocycler helper` command, allowing you to select from multiple genome assembly tasks and configure relevant parameters.

**Tasks Available**:
- genome_size
- flye
- miniasm
- raven

**Required**:
- Reads (FASTQ)
- Assembler selection or genome size (genome_size) estimation

Other parameters are optional and task-dependent.

    ]]></help>
</tool>

