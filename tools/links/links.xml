<tool id="links" name="Long Interval Nucleotide K-mer Scaffolder" version="0.1.0" python_template_version="3.5" profile="20.09">
    <xrefs>
        <xref type="bio.tools">links</xref>
    </xrefs>
    <requirements>
        <container type="package" version="2.0.1">links</container> 
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ## SET UP FILE PATHS
        #set sequences_fn = 'sequences.' + '$sequences.ext'
        #set reads_fn = 'reads.' + '$reads.ext'
        ln -s '$sequences' '$sequences_fn'
        &&
        ln -s '$reads' '$reads_fn'
        &&

        ## RUN LINKS
        LINKS
        -f '$sequences_fn'
        -s <( echo '$reads_fn' )
        -b links_output
    ]]></command>
    <inputs>
        <param type="data" name="sequences" format="fasta,fasta.gz" />
        <param type="data" name="reads" format="fasta,fasta.gz,fastq,fastq.gz" />
    </inputs>
    <outputs>
        <data name="scaffolds" format="fasta" from_work_dir="links_output.scaffolds.fa" />
    </outputs>
    <tests>
    <test>
        <param name="sequences" value="used_contigs.fasta.gz"/>
        <param name="reads" value="reads.fasta.gz"/>
        <output name="scaffolds" ftype="fasta" file="links_output.scaffolds.fa"/>
    </test>
    </tests>
    <help><![CDATA[

        f  sequences to scaffold (Multi-FASTA format, required)
        s  file-of-filenames, full path to long sequence reads or MPET pairs [see below] (Multi-FASTA/fastq format, required)
        m  MPET reads (default -m 1 = yes, default = no, optional)
        DO NOT SET IF NOT USING MPET. WHEN SET, LINKS WILL EXPECT A SPECIAL FORMAT UNDER -s
        Paired MPET reads in their original outward orientation <- -> must be separated by :
        >template_name    ACGACACTATGCATAAGCAGACGAGCAGCGACGCAGCACG:ATATATAGCGCACGACGCAGCACAGCAGCAGACGAC
        d  distance between k-mer pairs (ie. target distances to re-scaffold on. default -d 4000, optional)
        Multiple distances are separated by comma. eg. -d 500,1000,2000,3000
        k  k-mer value (default -k 15, optional)
        t  step of sliding window when extracting k-mer pairs from long reads (default -t 2, optional)
        Multiple steps are separated by comma. eg. -t 10,5
        j  threads  (default -j 3, optional) 
        o  offset position for extracting k-mer pairs (default -o 0, optional)
        e  error (%) allowed on -d distance   e.g. -e 0.1  == distance +/- 10% (default -e 0.1, optional)
        l  minimum number of links (k-mer pairs) to compute scaffold (default -l 5, optional)
        a  maximum link ratio between two best contig pairs (default -a 0.3, optional)
        *higher values lead to least accurate scaffolding*
        z  minimum contig length to consider for scaffolding (default -z 500, optional)
        b  base name for your output files (optional)
        r  Bloom filter input file for sequences supplied in -s (optional, if none provided will output to .bloom)
        NOTE: BLOOM FILTER MUST BE DERIVED FROM THE SAME FILE SUPPLIED IN -f WITH SAME -k VALUE
        IF YOU DO NOT SUPPLY A BLOOM FILTER, ONE WILL BE CREATED (.bloom)
        p  Bloom filter false positive rate (default -p 0.001, optional; increase to prevent memory allocation errors)
        x  Turn off Bloom filter functionality (-x 1 = yes, default = no, optional)
        v  Runs in verbose mode (-v 1 = yes, default = no, optional)

    ]]></help>
    <citations>
      <citation type="doi">10.1186/s13742-015-0076-3</citation>
    </citations>
</tool>