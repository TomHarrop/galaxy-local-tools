<tool id="links" name="Long Interval Nucleotide K-mer Scaffolder" version="@TOOL_VERSION@+galaxy" python_template_version="3.5" profile="20.09">
    <macros>
        <token name="@TOOL_VERSION@">2.0.0</token>
    </macros>
    <xrefs>
        <xref type="bio.tools">links</xref>
    </xrefs>
    <requirements>
        <!-- Bioconda container (job runner needs to be set to singularity) -->
        <!-- 2.0.1 is missing LINKS_CPP -->
        <!-- 2.0.0 is missing perl -->
        <!-- <requirement type="package" version="@TOOL_VERSION@">links</requirement>  -->
        <!-- My container-->
        <container type="docker">ghcr.io/tomharrop/container-links:v@TOOL_VERSION@</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ## SET UP FILE PATHS
        #set sequences_fn = 'sequences.' + $f.ext
        ln -s '$f' '$sequences_fn'
        &&
        #set n = 14
        #for $read in $reads
            #set read_fn = 'reads' + str($n) + '.' + $read.ext
            #set n += 1
            ln -s '$read' '$read_fn'
            &&
            printf '%s\n' '$read_fn' >> reads.fof
            &&
        #end for
        cat reads.fof &&

        ## RUN LINKS
        LINKS
        -f '$sequences_fn'
        -s reads.fof
        -b links_output
        &&

        ## TIDY UP
        rm reads.fof '$sequences_fn'

    ]]></command>        
    <inputs>
        <param argument="-f" type="data" format="fasta,fasta.gz" help="Sequences to scaffold" label="Contigs" />
        <param type="data" name="reads" multiple="true" format="fasta,fasta.gz,fastq,fastq.gz" label="Reads" help="Long sequence reads for scaffolding" />
    </inputs>
    <outputs>
        <data name="scaffolds" format="fasta" from_work_dir="links_output.scaffolds.fa" />
        <data name="correspondence" format="tsv" from_work_dir="links_output.assembly_correspondence.tsv" />
    </outputs>
    <tests>
    <test>
        <param name="f" value="used_contigs.fasta.gz"/>
        <param name="reads" value="reads.fasta.gz"/>
        <output name="scaffolds" ftype="fasta" file="links_output.scaffolds.fa"/>
        <output name="correspondence" ftype="tsv" file="links_output.assembly_correspondence.tsv"/>
    </test>
    <test>
        <param name="f" value="used_contigs.fasta.gz"/>
        <param name="reads" value="reads1.fasta.gz,reads2.fasta.gz"/>
        <output name="scaffolds" ftype="fasta" file="links_output.scaffolds.fa"/>
        <output name="correspondence" ftype="tsv" file="links_output.assembly_correspondence.tsv"/>
    </test>
    </tests>
    <help><![CDATA[
        m  MPET reads (default -m 1 = yes, default = no, optional)
        DO NOT SET IF NOT USING MPET. WHEN SET, LINKS WILL EXPECT A SPECIAL FORMAT UNDER -s
        Paired MPET reads in their original outward orientation <- -> must be separated by :
        >template_name    ACGACACTATGCATAAGCAGACGAGCAGCGACGCAGCACG:ATATATAGCGCACGACGCAGCACAGCAGCAGACGAC
        d  distance between k-mer pairs (ie. target distances to re-scaffold on. default -d 4000, optional)
        Multiple distances are separated by comma. eg. -d 500,1000,2000,3000
        k  k-mer value (default -k 15, optional)
        t  step of sliding window when extracting k-mer pairs from long reads (default -t 2, optional)
        Multiple steps are separated by comma. eg. -t 10,5
        j  threads  (default -j 3, optional) 
        o  offset position for extracting k-mer pairs (default -o 0, optional)
        e  error (%) allowed on -d distance   e.g. -e 0.1  == distance +/- 10% (default -e 0.1, optional)
        l  minimum number of links (k-mer pairs) to compute scaffold (default -l 5, optional)
        a  maximum link ratio between two best contig pairs (default -a 0.3, optional)
        *higher values lead to least accurate scaffolding*
        z  minimum contig length to consider for scaffolding (default -z 500, optional)
        b  base name for your output files (optional)
        r  Bloom filter input file for sequences supplied in -s (optional, if none provided will output to .bloom)
        NOTE: BLOOM FILTER MUST BE DERIVED FROM THE SAME FILE SUPPLIED IN -f WITH SAME -k VALUE
        IF YOU DO NOT SUPPLY A BLOOM FILTER, ONE WILL BE CREATED (.bloom)
        p  Bloom filter false positive rate (default -p 0.001, optional; increase to prevent memory allocation errors)
        x  Turn off Bloom filter functionality (-x 1 = yes, default = no, optional)
        v  Runs in verbose mode (-v 1 = yes, default = no, optional)

    ]]></help>
    <citations>
      <citation type="doi">10.1186/s13742-015-0076-3</citation>
    </citations>
</tool>