<tool id="xnatutils" name="Xnatutils" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Australia Images Service</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
#set $xnat_url = $__user__.extra_preferences.get('xnat_account|xnat_url', "").strip()
#set $xnat_user = $__user__.extra_preferences.get('xnat_account|xnat_user', "").strip()
#set $xnat_pass = $__user__.extra_preferences.get('xnat_account|password', "").strip()

export XNAT_URL=$xnat_url &&
export XNAT_USER=$xnat_user &&
export XNAT_PASS=$xnat_pass &&

      #if $operation.ops_list == "list":
	#if $operation.project_option.project == "default":
	    xnat-ls --server $xnat_url >> '$list_log' 2>&1
	#else
	    #if $operation.project_option.project_id !='':
	    	xnat-ls --server $xnat_url
	    		--project $operation.project_option.project_id
	    		#if $operation.project_option.subject_id !='':
			   --subject $operation.project_option.subject_id
	    		#end if
	    		--datatype $operation.project_option.datatype_choice
	    		#if $operation.project_option.return_attr:
			    #if $operation.project_option.datatype_choice == 'scan':
	    		        --return_attr type
	    		    #elif $operation.project_option.datatype_choice == 'subject' or $operation.project_option.datatype_choice == 'session':
	    		        --return_attr id
			    #end if
	    		#end if
			#if $operation.project_option.datatype_choice == 'session' and $operation.project_option.datatype_selector.include_scan !='':
	    		    --with_scans $operation.project_option.datatype_selector.include_scan
	    		#end if
	    		#if $operation.project_option.datatype_choice == 'session' and $operation.project_option.datatype_selector.exclude_scan !='':
			    --without_scans $operation.project_option.datatype_selector.exclude_scan
	    		#end if
	    		#if  $operation.project_option.before_date !='':
			    --before  $operation.project_option.before_date
			#end if
	    		#if  $operation.project_option.after_date !='':
			    --after $operation.project_option.after_date
	    		#end if
			>> '$list_log' 2>&1
	    #else
	    	echo "Project ID is missing" >> '$list_log' 2>&1
	    #end if
	#end if
      #elif $operation.ops_list == "get":
	    #if $operation.input_option.input_type == 'use_xml':
	    	xnat-get --server $xnat_url $operation.input_option.xml_file  >> '$get_log'  2>&1
	    #else
	    	  #if $operation.input_option.session !='':
		      echo '$operation.input_option.session' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.scans !='':
		      echo '$operation.input_option.scans' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.scan_option.with_scans !='':
		      echo '$operation.input_option.scan_option.with_scans' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.convert_type.to_type !='':
		     echo '$operation.input_option.convert_type.to_type'  >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.converter_option.converter !='':
		     echo '$operation.input_option.converter_option.converter' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.before_date !='':
		     echo '$operation.input_option.opt.before_date' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.after_date !='':
		     echo '$operation.input_option.opt.after_date' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.project_id !='':
		     echo '$operation.input_option.opt.project_id' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.subject_id !='':
		     echo '$operation.input_option.opt.subject_id' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.resource_name !='':
		     echo '$operation.input_option.opt.subject_id' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.dont_match_scan_id:
	    	     echo '$operation.input_option.opt.dont_match_scan_id' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.opt.strip_name :
	    	     echo '$operation.input_option.opt.strip_name' >> '$get_log' &&
	    	  #end if
	    	  #if $operation.input_option.method !=''
		     echo '$operation.input_option.method' >> '$get_log'  2>&1
	          #end if
	    #end if
      #elif $operation.ops_list == "put":
	    #import re
	    #if $operation.upload_file.ext.endswith(".gz")
	    	#set file_identifier=re.sub('[^\s\w\-]', '_', str($operation.upload_file.element_identifier)) + '.gz'
		ln -s '$operation.upload_file' '${file_identifier}' &&
	    #else
	        #set file_identifier=re.sub('[^\s\w\-]', '_', str($operation.upload_file.element_identifier))
		ln -s '$operation.upload_file' '${file_identifier}' &&
	    #end if

	    xnat-put --server $xnat_url
	    	     $operation.session_name
	    	     $operation.scan_name
		     '${file_identifier}'
	    	     --method $operation.method
	    	     $operation.dataset_option.overwrite
		     $operation.dataset_option.create_session
	    	     #if $operation.dataset_option.resource_name !='':
	    		 --resource_name $operation.dataset_option.resource_name
	    	     #end if
		     #if $operation.id_option.project_id !='':
	    		 --project_id
	             #end if
	    	     #if $operation.id_option.subject_id !='':
	    		 --subject_id
	             #end if
	    	     #if $operation.id_option.scan_id != '':
	    		 --scan_id
	             #end if
                     >> '$put_log' 2>&1
      #elif $operation.ops_list == "rename":
	    xnat-rename --server $xnat_url 
	                $operation.old_session_name $operation.new_session_name >> '$rename_log' 2>&1
      #end if

]]></command>
    <inputs>
	<conditional name="operation">
	   <param name="ops_list" type="select" label="Xnat operation">
		<option value="list">list</option>
		<option value="get">get</option>
		<option value="put">put</option>
		<option value="rename">rename</option>
	   </param>
	   <when value="list">
		<conditional name="project_option">
		     <param name="project" type="select" label="list ID" help="list project id only if it's not defined by user">
		       <option value="default" selected="true">List project id only</option>
		       <option value="user_defined">User defined</option>
		     </param>
		     <when value="default"></when>
		     <when value="user_defined">
			   <param name="project_id" type="text" optional="false" label="Enter project ID" help="Object subject, session or scan for the project id entered by user"/> 
			   <param name="subject_id" type="text" label="Enter subject ID" help="The ID of the subject to list the sessions from. Requires that project_id is also supplied"/>
			   <param name="before_date" type="text" label="Only select sessions before this date" help="ISO8601 format date or date/time, like YYYY-MM-DD" />
			   <param name="after_date" type="text" label="Only select sessions after this date" help="ISO8601 format date or date/time, like YYYY-MM-DD" />
			   <param argument="--return_attr" type="boolean" truevalue="true" falsevalue="" checked="false" label="Get attribute" help="return id for project and type for scan"/>
			   <conditional name="datatype_selector">
				<expand macro="datatype"/>
				<when value="subject">

				</when>
				<when value="session">
				      <param name="include_scan" type="text" label="Enter scan identifier(s)" help="Include these scan ids to be listed"/>
				      <param name="exclude_scan" type="text" label="Enter scan identifier(s)" help="Exclude these scan ids to be listed"/>
			        </when>
				<when value="scan">
				</when>
			   </conditional>
		     </when>
		</conditional>
	   </when>
	   <when value="get">
		<conditional name="input_option">
                    <param name="input_type" type="select" label="Selet an input type" >
                       <option value="use_xml" >xml file</option>
                       <option value="user_defined">user define</option>
	            </param>
		    <when value="use_xml">
			 <param name="xml_file" type="data" format="xml" label="xml file"/>
			 <expand macro="xnat_get_option"/>
		    </when>
		    <when value="user_defined">
		        <param name="session" type="text" optional="false" label="Name of session" help="Use name (i,e MRH017_001_MR01) or regular expression (i.eMRH017_001_MR01) to download"/>   
			<param name="scans" type="text" label="Name of the scan" help="If not provided all scans from the session are downloaded. Multiple scans can be specified"/>
			<expand macro="xnat_get_option"/>
	  	   </when>
	       </conditional>
	   </when>   
	    <when value="put">
		   <param name="upload_file" type="data" format="nii1,nii1.gz" optional="false" label="Select files to upload" help="upload filename format i.e e4.60005.nii.gz - will be converted to filename format project_subject_visit (i.e e4_60005_nii_gz)  have exactly two underscores" />
		   <param name="session_name" type="text" optional="false" label="Enter a session name" help="required to enable create-session; project_subject_visit convention, i.e. have exactly 2 underscores"/>
		   <param name="scan_name" type="text" optional="false" label="Enter a scan name" help="Name for the dataset on XNAT; --overwrite must be provided if the scan already exists"/>
		   <expand macro="xnat_put_option"/>
		   <param name="method" type="select" multiple="false" label="Select output file type">
			  <option value="tgz_file" selected="true">tgz file</option> 
			  <option value="per_file">per file</option>
			  <option value="tar_memory">tar memory</option>
			  <option value="tgz_memory">tgz memory</option>
			  <option value="tar_file">tar file</option>
                  </param>
	    </when>
	    <when value="rename">
		 <param name="old_session_name" type="text" optional="false" label="Name of the session to rename" help="i.e subject01_MR01" />
		 <param name="new_session_name" type="text" optional="false" label="The new name of the session" help="rename to subject01_MT01"/>
	    </when>
	</conditional>
    </inputs>
    <outputs>
	   <data name="list_log" format="txt" label="${tool.name} list">
		 <filter>operation['ops_list'] == 'list'</filter>
	   </data>
           <data name="get_log" format="txt" label="${tool.name} get">
                 <filter>operation['ops_list'] == 'get'</filter>
           </data>
           <data name="put_log" format="txt" label="${tool.name} on ${on_string}: put">
                 <filter>operation['ops_list'] == 'put'</filter>
           </data>
           <data name="rename_log" format="txt" label="${tool.name} rename">
                 <filter>operation['ops_list'] == 'rename'</filter>
           </data>
    </outputs>
    <tests>
         <!-- Test 1 xnat-ls with project option -->
	<test expect_num_outputs="1">
            <conditional name="operation">
                <param name="ops_list" value="list" />
            </conditional>
            <output name="list_log" ftype="xnt_ls_project.log">
                <assert_contents>
		    <has_text text="subject01"/>
                </assert_contents>
            </output>
    	</test>
         <!-- Test 2 xnat-ls with project option datatype scan  -->
        <test expect_num_outputs="1">
            <conditional name="operation">
		 <param name="ops_list" value="list" />
		 <conditional name="datatype_selector">
		     <param name="datatype_choice" value="scan"/>
		 </conditional>
            </conditional>
            <output name="list_log" ftype="xnat_ls_project_scan.log">
                <assert_contents>
                    <has_text text="t1w"/>
                </assert_contents>
            </output>
        </test>
         <!-- Test 3 xnat-ls with project option datatype session -->
        <test expect_num_outputs="1">
            <conditional name="operation">
		<param name="ops_list" value="list" />
		<conditional name="datatype_selector">
		     <param name="datatype_choice" value="session"/>
		</conditional>
            </conditional>
            <output name="list_log" ftype="xnt_ls_project_session.log">
                <assert_contents>
                    <has_text text="subject01_MR01"/>
                </assert_contents>
            </output>
    	</test>
         <!-- Test 4 xnat-get with project option datatype session -->
        <test expect_num_outputs="1">
            <conditional name="operation">
                <param name="ops_list" value="get" />
                <param name="datatype_choice" value="t1w"/>
            </conditional>
            <output name="get_log" ftype="xnt_get.log">
                <assert_contents>
                    <has_text text="subject01_MR01"/>
                </assert_contents>
            </output>
    	</test>
	<!-- Test 5 xnat-put xnat-put subject01_MT01 t1w test-data/e4.60005.nii.gz method per_file overwrite -->
        <test expect_num_outputs="1">
            <conditional name="operation">
                <param name="ops_list" value="put" />
		<param name="upload_file" value="e4.60005.nii.gz"/>
		<param name="session_name" value="subject01_MR01"/>
		<param name="scan_name" value="t1w"/>
		<param name="method" value="per_file"/>
		<param name="overwrite" value="true"/>
            </conditional>
            <output name="put_log" ftype="xnt_get.log">
                <assert_contents>
                    <has_text text="subject01_MR01"/>
                </assert_contents>
            </output>
        </test>
         <!-- Test 6 xnat-rename to rename session -->
        <test expect_num_outputs="1">
            <conditional name="operation">
                <param name="ops_list" value="rename" />
            </conditional>
            <output name="rename_log" ftype="xnt_rename.log">
                <assert_contents>
                    <has_text text="subject01_MR01"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
**What it does**
        Xnat-utils is a collection of scripts for conveniently up/downloading and listing data on/from XNAT server.

**Usage**
	Four commands are wrapped for Galaxy operation.

- ``xnat-ls``: list projects/subjects/sessions/scans
- ``xnat-get``: download scans and resources
- ``xnat-put``: upload scans and resources (requires write privileges to project)
- ``xnat-rename``: renames an XNAT session


**How to connect to XNAT server**

To interact with XNAT server from Galaxy you need to set up your XNAT login credential in Galaxy user preference.

1. Obtain your username and password from XNAT

2. In Galaxy, add XNAT server url, username and password  to "XNAT Server and Account" field in User > Preferences > Manage Information. Your XNAT login credential can be different from your Galaxy login credential.


**Remarks**
        Xnatutils_ is used to query and retrieve files on Australia Image Service (AIS_) Server.

.. _AIS: https://ardc.edu.au/project/australian-imaging-service-ais/
.. _Xnatutils: https://github.com/Australian-Imaging-Service/xnatutils

    </help>
    <citations>
        <citation type="doi">10.47486/PL102</citation>
    </citations>
</tool>
